h1. SIPATRA

Sipatra is a simple Sinatra like DSL for SIP Servlets. It's heavily inspired from Sinatra and was adapted only in those areas that were required by differences between the HTTP and SIP protocols.

Sipatra is a work in progress.

h2. Handlers

In Sipatra an handler is a SIP method paired with an URI matching pattern and some conditions. Each handler is associated with a block:

<pre>
invite 'sip:standard@.*' do
    proxy "sip:0123456789@#{request.requestURI.host}"
    puts "VIA    : '#{headers[:Via].join(", ")}'"
    puts "CONTACT: '#{header['Contact']}'"
    
    send_response 200, "OK" do |response|
      response.addHeader('X-Header', 'Foo')
    end
end

register do
    proxy
end
</pre>

Those handlers have to be put in a file called @WEB-INF/jruby/application.rb@ and you need to add the following declaration to your @WEB-INF/sip.xml@:. Handlers exist for the following SIP methods: ACK, BYE, CANCEL, INFO, INVITE, MESSAGE, NOTIFY, OPTIONS, PRACK, PUBLISH, REFER, REGISTER, SUBSCRIBE, UPDATE (http://en.wikipedia.org/wiki/List_of_SIP_request_methods).

<pre>
  <servlet>
      <servlet-name>jruby</servlet-name>
      <servlet-class>org.cipango.jruby.JRubyServlet</servlet-class>
      <load-on-startup/>
  </servlet>
</pre>

h2. Dependencies

In order to use the cipango-jruby-1.0-SNAPSHOT.jar you also need to put those jars into your @WEB-INF/lib@ directory.

* bytelist-1.0.6.jar
* cipango-jruby-1.0-SNAPSHOT.jar
* constantine-0.6.jar
* jaffl-0.5.1.jar
* jcodings-1.0.4.jar
* jffi-1.0.1.jar
* jline-0.9.93.jar
* jnr-netdb-1.0.jar
* jnr-posix-1.1.4.jar
* joda-time-1.6.jar
* joni-1.1.4.jar
* jruby-1.5.1.jar